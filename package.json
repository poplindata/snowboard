{
  "name": "snowboard",
  "displayName": "snowboard",
  "description": "",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.70.0"
  },
  "categories": [
    "Other",
    "Snippets"
  ],
  "activationEvents": [
    "onCommand:snowboard.helloWorld",
    "onCommand:snowboard.openMicro",
    "onCommand:snowboard.newSchema",
    "onCommand:snowboard.openMicroDebugger",
    "onView:schemas",
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "snippets": [
      {
        "path": "./snippets/android.code-snippets"
      },
      {
        "path": "./snippets/arduino.code-snippets"
      },
      {
        "path": "./snippets/cpp.code-snippets"
      },
      {
        "path": "./snippets/dotnet.code-snippets"
      },
      {
        "path": "./snippets/flutter.code-snippets"
      },
      {
        "path": "./snippets/go.code-snippets"
      },
      {
        "path": "./snippets/ios.code-snippets"
      },
      {
        "path": "./snippets/java.code-snippets"
      },
      {
        "path": "./snippets/javascript-node.code-snippets"
      },
      {
        "path": "./snippets/javascript-web.code-snippets"
      },
      {
        "path": "./snippets/lua.code-snippets"
      },
      {
        "path": "./snippets/php.code-snippets"
      },
      {
        "path": "./snippets/pixel-tracker.code-snippets"
      },
      {
        "path": "./snippets/python.code-snippets"
      },
      {
        "path": "./snippets/react-native.code-snippets"
      },
      {
        "path": "./snippets/roku.code-snippets"
      },
      {
        "path": "./snippets/rust.code-snippets"
      },
      {
        "path": "./snippets/ruby.code-snippets"
      },
      {
        "path": "./snippets/scala.code-snippets"
      },
      {
        "path": "./snippets/tracking-cli.code-snippets"
      },
      {
        "path": "./snippets/unity.code-snippets"
      },
      {
        "path": "./snippets/json-schema.code-snippets"
      }
    ],
    "keybindings": [
      {
        "key": "cmd+k a",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !editorReadonly",
        "args": {
          "langId": "json",
          "name": "Array property"
        }
      },
      {
        "key": "cmd+k n",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !editorReadonly",
        "args": {
          "langId": "json",
          "name": "Number property"
        }
      },
      {
        "key": "cmd+k s",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !editorReadonly",
        "args": {
          "langId": "json",
          "name": "String property"
        }
      },
      {
        "key": "cmd+k b",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !editorReadonly",
        "args": {
          "langId": "json",
          "name": "Boolean property"
        }
      },
      {
        "key": "cmd+k o",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !editorReadonly",
        "args": {
          "langId": "json",
          "name": "Object property"
        }
      }
    ],
    "commands": [
      {
        "command": "snowboard.generateFakeData",
        "title": "Generate fake event"
      },
      {
        "command": "snowboard.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "snowboard.openMicro",
        "title": "Open Micro (all)"
      },
      {
        "command": "snowboard.newSchema",
        "title": "Create new schema"
      },
      {
        "command": "snowboard.newAddition",
        "title": "New schema addition (1-0-x)"
      },
      {
        "command": "snowboard.newRevision",
        "title": "New schema revision (1-x-0)"
      },
      {
        "command": "snowboard.newModel",
        "title": "New schema model (x-0-0)"
      },
      {
        "command": "snowboard.openMicroDebugger",
        "title": "Open debugger (micro)"
      },
      {
        "command": "schemas.editEntry",
        "title": "Edit",
        "icon": {
          "light": "media/dep.svg",
          "dark": "media/dep.svg"
        }
      },
      {
        "command": "enrichments.editEnrichment",
        "title": "Edit Enrichment",
        "icon": "$(edit)"
      },
      {
        "command": "environments.addEnvironment",
        "title": "Add",
        "icon": "$(settings-add)"
      },
      {
        "command": "environments.refreshEnvironments",
        "title": "Refresh",
        "icon": "$(refresh)"
      }
    ],
    "configuration": {
      "title": "Snowboard",
      "properties": {
        "snowboard.defaultVendor": {
          "type": "string",
          "default": "com.acme",
          "description": "Specifies the default vendor to use for new schemas"
        },
        "snowboard.localSchemasFolder": {
          "type": [
            "string",
            "null"
          ],
          "default": "schemas/",
          "description": "Folder (relative to the current workspace) containing your local Iglu schemas"
        },
        "snowboard.environments": {
          "type": [
            "array",
            "null"
          ],
          "description": "Define Snowplow environments",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the environment",
                "default": "default environment"
              },
              "environment_type": {
                "type": "string",
                "enum": [
                  "micro",
                  "mini",
                  "full"
                ],
                "default": "full"
              },
              "collector_url": {
                "type": "string",
                "description": "URL of the collector endpoint for this environment",
                "default": "https://acme.com"
              }
            },
            "default": {
              "name": "default env",
              "environment_type": "full",
              "collector_url": "https://acme.com"
            }
          }
        }
      }
    },
    "views": {
      "snowplow": [
        {
          "id": "environments",
          "name": "Environments"
        },
        {
          "id": "schemas",
          "name": "Schemas"
        },
        {
          "id": "enrichments",
          "name": "Enrichments"
        },
        {
          "id": "targets",
          "name": "Targets"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "snowplow",
          "title": "Snowplow",
          "icon": "media/dep.svg"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "environments.addEnvironment",
          "when": "view == environments",
          "group": "navigation"
        },
        {
          "command": "environments.refreshEnvironments",
          "when": "view == environments",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "schemas.editEntry",
          "when": "view == schemas && viewItem == schema",
          "group": "inline"
        }
      ]
    },
    "languages": [
      {
        "id": "jsonschema",
        "filenamePatterns": [
          "jsonschema/*-*-*"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/isomorphic-fetch": "^0.0.36",
    "@types/mocha": "^10.0.0",
    "@types/node": "16.x",
    "@types/vscode": "^1.72.0",
    "@typescript-eslint/eslint-plugin": "^5.27.0",
    "@typescript-eslint/parser": "^5.27.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.16.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.2"
  },
  "dependencies": {
    "@faker-js/faker": "^7.5.0",
    "isomorphic-fetch": "^3.0.0",
    "json-schema-faker": "^0.5.0-rcv.44",
    "nearley": "^2.20.1",
    "node-sql-parser": "^4.4.0",
    "quicktype-core": "^6.1.0",
    "vscode-dts": "^0.3.3"
  }
}
