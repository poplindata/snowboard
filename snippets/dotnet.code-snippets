{
    "Initialise collector": {
        "scope": "csharp",
        "prefix": "initCol",
        "body": [
            "SnowplowHttpCollectorEndpoint endpoint = new SnowplowHttpCollectorEndpoint(\"${1:com.collector}\", protocol: HttpProtocol.HTTPS, method: HttpMethod.POST, l: logger);"
        ]
    },
    "Set subject": {
        "scope": "csharp",
        "prefix": "setSubject",
        "body": [
            "Subject s1 = new Subject();",
            "s1.SetUserId(\"${1:123}\");"
        ]
    },
    "Send structured event": {
        "scope": "csharp",
        "prefix": "sendEvent",
        "body": [
            "t1.Track(new Structured()",
            "    .SetCategory(\"${1:category}\")",
            "    .SetAction(\"${2:action}\")",
            "    .SetLabel(\"${3:label}\")",
            "    .SetProperty(\"${4:property}\")",
            "    .SetValue(${5:1.00})",
            "    .Build());"
        ]
    },
    "Send self-describing JSON": {
        "scope": "csharp",
        "prefix": "sendJSON",
        "body": [
            "// Data as a Dictionary",
            "Dictionary<string, object> data = new Dictionary<string, object>();",
            "data.Add(\"${1:Event}\", \"${2:Data}\")",
            "",
            "// We then create a new SelfDescribingJson",
            "SelfDescribingJson json = new SelfDescribingJson(\"${3:iglu:com.acme/example/jsonschema/1-0-0}\", data);"
        ]
    },
    "Timing": {
        "scope": "csharp",
        "prefix": "timing",
        "body": [
            "t1.Track(new Timing()",
            "    .SetCategory(\"${1:category}\")",
            "    .SetVariable(\"${2:variable}\")",
            "    .SetTiming(${3:1})",
            "    .SetLabel(\"${7:label}\")",
            "    .Build());",
            ""
        ]
    },
    "Screen view": {
        "scope": "csharp",
        "prefix": "screenView",
        "body": [
            "t1.Track(new ScreenView()",
            "    .SetName(\"${1:Screen name}\")",
            "    .SetId(\"${2:screen123}\")",
            "    .Build());"
        ]
    },
    "Ecommerce": {
        "scope": "csharp",
        "prefix": "ecommerce_item",
        "body": [
            "EcommerceTransactionItem item = new EcommerceTransactionItem ()",
            "      .SetSku (\"${1:sku}\")",
            "      .SetPrice (${2:10.2})",
            "      .SetQuantity (${3:1})",
            "      .SetName (\"${4:name}\")",
            "      .SetCategory (\"${5:category}\")",
            "      .Build ()"
        ]
    }
}