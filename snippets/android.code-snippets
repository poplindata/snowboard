{
    "Initialise collector": {
        "scope": "kotlin,java",
        "prefix": "initCollector",
        "body": [
            "TrackerController tracker = Snowplow.createTracker(context, \"${1:appTracker}\", ${2:com.collector}, HttpMethod.POST);"
        ]
    },
    "Send structured event": {
        "scope": "kotlin,java",
        "prefix": "sendStructuredEvent",
        "body": [
            "Event event = new Structured(\"${1:category}\", \"${2:action}\"); tracker.track(event);"
        ]
    },
    "Send self-describing JSON": {
        "scope": "kotlin,java",
        "prefix": "sendSelfDescribingEvent",
        "body": [
            "SelfDescribingJson sdj = new SelfDescribingJson(\"${3:iglu:com.example/example/jsonschema/1-0-0}\", attributes);",
            "SelfDescribing event = new SelfDescribing(sdj);",
            "tracker.track(event);"
        ]
    },
    "Timing": {
        "scope": "kotlin,java",
        "prefix": "timing",
        "body": [
            "Timing event = new Timing(\"${1:category}\", \"${2:variable}\", ${3:5})",
            "\t.label(\"${4:label}\");",
            "",
            "tracker.track(event);"
        ]
    },
    "Screen view (apps only)": {
        "scope": "kotlin,java",
        "prefix": "screenView",
        "body": [
            "ScreenView event = new ScreenView(\"screen\", UUID.randomUUID().toString());",
            "tracker.track(event);"
        ]
    },
    "Consent granted": {
        "scope": "kotlin,java",
        "prefix": "consentGranted",
        "body": [
            "ConsentGranted event = new ConsentGranted(\"${1:2022-05-08T18:12:02+00:00}\", \"${2:document_id}\", \"${3:document_version}\")",
            "\t\t.documentDescription(\"${4:doc description}\")",
            "\t\t.documentName(\"${5:doc name}\");",
            "tracker.track(event);"
        ]
    },
    "Consent withdrawn": {
        "scope": "kotlin,java",
        "prefix": "consentWithdrawn",
        "body": [
            "ConsentWithdrawn event = new ConsentWithdrawn(true, \"${1:document_id}\", \"${2:document_version}\")",
            "\t\t.documentDescription(\"${3:doc description}\")",
            "\t\t.documentName(\"${4:doc name}\");",
            "tracker.track(event);"
        ]
    },
    "Deep Link": {
        "scope": "kotlin,java",
        "prefix": "deepLink",
        "body": [
            "DeepLinkReceived event = new DeepLinkReceived(deepLinkUrl).referrer(referrer);",
            "tracker.track(event);"
        ]
    }
}
